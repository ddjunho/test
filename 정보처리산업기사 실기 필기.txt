#include<stdio.h>
int main() {
	char s1[5] = "abcd";
	char s2[5];
	for(int i=0; i<4; i++) {
		s2[i] = s1[3-i]; //dcba
	}
	s2[5] = '\0'; //error // s2 = 01234 5는 없음
	printf("%s", s2);
}

#include<stdio.h>
int main() {
	// A = 65, a = 97
	int a = 10;
	char b = 'a';문자 'a'의 ASCII 코드 값인 97을 정수로 출력
	printf("%d \n", a);
	printf("%d \n", b); 
	printf("%c", b); 
}

SQL문에서 특정 속성의 값을 제한하기 위해 사용하는 문법으로 도메인이 가질 수 있는 값의 범위를 제약할 때 사용하는 제약조건을 쓰시오.

CHECK

#include<stdio.h>
int main() {
	int result=1, i;
	for(i=1; i<=5; i++) {
		result *= i;
	}
	printf("%d", result);
}
120


일괄처리시스템 - 자료나 정보 단위들이 발생할때마다 즉각적으로 처리하는것이아니라 일정량 또는 일정 기간 동안 모아두었다가 한꺼번에 처리하는 방식
다중프로그래밍시스템 - 하나의 주기억장치에 여러개의 프로그램을 동시에 처리하는방식
시분할시스템 - 하나cpu의 전체 사용시간을 작은 작업 시간량으로 나누어서 그 시간량 동안만 번갈아가면서 cpu를 할당하여 각 작업을 처리하는 방식
다중처리시스템 - 컴퓨터 시스템의 여러개의 cpu를 사용하여 처리하는 방식


2. 개체와 관계를 아래 E-R모델에서 찾아 쓰시오
1. 개체 : 고객, 책, 출판사
2. 관계 : 구매, 공급

내부에서 사설 IP 주소를 사용하고 외부 네트워크로 나가는 주소는 공인 IP 주소를 사용하도록 하는 IP 주소 변환 방식으로 사설 IP 주소를 공인 IP 주소로 바꿔주는데 사용하는 통신망의 주소 변환 기술 NAT

	#include<stdio.h>
#define LEN 10
void swap(int arr[], int i, int j) {
	int temp = arr[i];
	arr[i] = arr[j];
	arr[j] = temp;
}
int partition(int arr[], int left, int right) {
	int pivot = arr[(left + right) / (가)];
	while(left <= right) {
		while(arr[left] < pivot)
			left++;
		while(arr[right] > pivot) 
			right--;
		if(left <= right) {
			swap(arr, left, right);
			left++;
			right--;
		}
	}
	return left;
}
void sort(int arr[], int left, int right) {
	if(left >= right)
		return;
	int center = partition(arr, left, right);
	sort(arr, left, center-1);
	sort(arr, center, right);
}
void quick_sort(int arr[]) {
	sort(arr, 0, LEN-1);
}
int main(void) {
	int data[LEN] = {5, 8, 3, 12, 9, 25, 15, 21, 1, 19};
	quick_sort(data);
	for(int i=0;i<LEN;i++){
		printf("%d\n", data[i]);
	}
}
그렇다면 해당 피벗방식은 퀵정렬의 중간값을 선택하므로 2

	
#include<stdio.h>

int SumNTo1(int n) {
    if(n <= 1)
        return 1;
    else
        return n + SumNTo1(n - 1); // 재귀 호출로 n-1까지의 합을 구하고 n을 더합니다.
}

int main() {
    int result = SumNTo1(100);
    printf("%d", result); // 출력: 5050 (1부터 100까지의 합)
    
    return 0;
}
1. 트랜잭션이정상적으로 수행하여 변경된 내용을 실제 물맂거 디스크에 저장할 때 사용하는 연산 commit
2. 트랜잭션의 실행이 비정상적임을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산 rollback
관계대수연산자
Select – 한 릴레이션에서 만족하는 튜플들의 부분집합
Project – 한 릴레이션의 속성들은 부분집합을 구한다.
Intersection – 두 릴레이션 모두에 속한 튜플들로 이루어진 릴레이션을 생성한다.
Difference – 두 릴레이션 중 하나의 릴레이션에는 속하지만 다른 하나의 릴레이션에는 속하지 않는 튜플들로 이루어진 릴레이션을 생성한다.
0      4      8     12     16     20     24     28     32
+------+------+------+------+------+------+------+------+
| Version  |  IHL |    Type of Service    |         Total Length         |
+------+------+------+------+------+------+------+------+
|         Identification        |Flags|     Fragment Offset       |
+------+------+------+------+------+------+------+------+
|  Time to Live  |    Protocol    |        Header Checksum        |
+------+------+------+------+------+------+------+------+
|                       Source IP Address                         |
+------+------+------+------+------+------+------+------+
|                     Destination IP Address                     |
+------+------+------+------+------+------+------+------+
|                    Options (if IHL > 5) ...
+------+------+------+------+------+------+------+------+

•  Header Length (IHL): IPv4 헤더 길이는 4비트로 표현되며, 이는 4바이트 단위로 표현됩니다. 따라서 IHL 값을 구한 후 4를 곱해 바이트 단위로 계산합니다.
•  Destination IP Address 크기: IPv4 헤더에서 목적지 IP 주소는 32비트(4바이트)입니다.

단위 테스트가 끝난 모듈을 통합하는 과정에서 발생할 수 있는 오류를 찾는 테스트가 통합 테스트(integration test)이다. 이때 단위 테스트가 끝난 모듈을 한꺼번에 결합하여 수행하는 방식을 뭐라고 하는지 쓰시오. 빅뱅(bigbang) 테스트
네트워크 주소 계산: iP 주소와 서브넷 마스크를 AND 연산
10111111.10101000.00011000.00000000 (IP 주소191.168.24.0)
11111111.11111111.11111100.00000000 (서브넷 마스크255.255.252.0)
---------------------------------
10111111.10101000.00011000.00000000 (191.168.24.0)

브로드캐스트 주소 계산:
서브넷 마스크의 호스트 부분을 모두 1로 설정한 후, IP 주소와 OR 연산을 수행

10111111.10101000.00011000.00000000 (IP 주소)
00000000.00000000.00000011.11111111 (서브넷 마스크의 호스트 부분)
---------------------------------
10111111.10101000.00011011.11111111(191.168.27.255)

AND 연산 규칙:
•	두 비트가 모두 1이어야 결과가 1이 됩니다.
•	하나라도 0이면 결과는 0이 됩니다.
OR 연산 규칙:
•	만약 두 비트 중 하나라도 1이면 결과는 1이 됩니다.
•	두 비트가 모두 0일 때만 결과가 0이 됩니다.
•	 다음은 교착상태 필요충분조건중 하나이다. 설명에 해당하는 것을 쓰시오.
1. 프로세스들이 필요로 하는 자웡네 대해 배타적인 통제권을 요구한다
2. 각 프로세스는 순환적으로 다음 프로세스가 요구하는 자원을 가지고 있다.

•	1. 상호 배제
•	2. 순환 대기

교착 상태(Deadlock)란 멀티프로세스 환경에서 발생할 수 있는 한 종류의 상태로, 각 프로세스가 다른 프로세스가 소유하고 있는 자원을 기다리며 무한정 대기하는 상황을 말합니다.
상호배제 – 자원은 한번에 하나의 프로세스만 사용가능 공유될수 없고 독점적으로 사용됨
점유대기 – 최소한 하나의 자원을 점유한 상태에서 다른 자원을 요청하며 대기하는 프로세스가 있어야 한다.
비선점 – 이미 할당된 자원을 강제로 뺏을수 없다.
순환 대기 – 자원요청 순서가 환형을 이루워야 한다.
#include<stdio.h>

int recursive(int n) {
    if (n <= 1) 
        return 1;
    else 
        return n * n + recursive(가);
}

int main() {
    int i;
    scanf("%d", &i);
    printf("%d ", recursive(i));
    return 0;
}

304



